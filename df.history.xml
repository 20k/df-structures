<data-definition>
    <struct-type type-name='historical_kills'>
        -- Important

        <stl-vector name="events">
            <int32_t ref-target='history_event'/>
        </stl-vector>

        -- Misc

        <stl-vector name="killed_race">
            <int16_t ref-target='creature_raw'/>
        </stl-vector>
        <stl-vector name="killed_caste">
            <int16_t ref-target='caste_raw' aux-value='$$._parent.killed_race[$._key]'/>
        </stl-vector>
        <stl-vector name="unk_30">
            <int32_t comment='-1'/>
        </stl-vector>
        <stl-vector name="unk_40">
            <int32_t comment='-1'/>
        </stl-vector>
        <stl-vector name="killed_site">
            <int32_t ref-target='world_site'/>
        </stl-vector>
        <stl-vector name="killed_undead">
            <bitfield base-type='uint16_t'>
                <flag-bit name='skeletal'/>
                <flag-bit name='zombie'/>
                <flag-bit name='ghostly'/>
            </bitfield>
        </stl-vector>
        <stl-vector name="killed_count" type-name='int32_t'/>
    </struct-type>

    <struct-type type-name='historical_figure_info'>
        <pointer name="unk_0">
            <stl-vector>
                <int16_t/>
            </stl-vector>
        </pointer>

        <pointer name="unk_4">
            <stl-vector name="unk_0">
                <int16_t/>
            </stl-vector>
            <stl-vector name="unk_10">
                <int32_t/>
            </stl-vector>
            <stl-vector name="unk_20"/>
            <stl-vector name="unk_30"/>
            <stl-vector name="unk_40" type-name='int16_t'/>
            <stl-vector name="unk_50" type-name='int16_t'/>
            <int16_t name="unk_60"/>
        </pointer>

        <pointer name="unk_8">
            <stl-vector>
                <int16_t/>
            </stl-vector>
        </pointer>

        <pointer name="unk_c">
            <static-array name='unk_0' count='30' type-name='int16_t'/>
            <stl-vector name="unk_3c">
                <pointer>
                    <int16_t name='a'/>
                    <int16_t name='b'/>
                </pointer>
            </stl-vector>
            <stl-vector name="unk_4c">
                <int16_t/>
            </stl-vector>
        </pointer>

        <pointer name="masterpieces">
            <stl-vector name="events">
                <int32_t ref-target='history_event'/>
            </stl-vector>
            <stl-vector name="events2" comment='ones that were stolen??..'>
                <int32_t ref-target='history_event'/>
            </stl-vector>
        </pointer>

        <pointer name="unk_14">
            <int16_t name="unk_0"/>
            <int32_t name="site" ref-target='world_site'/>
            <int32_t name="unk_8"/>
            <int32_t name="unk_c"/>
            <int16_t name="unk_10"/>
            <int16_t name="unk_12"/>
        </pointer>

        <pointer name="kills" type-name='historical_kills'/>

        <pointer name="wounds">
            <stl-vector name="events">
                <int32_t ref-target='history_event'/>
            </stl-vector>
            <stl-bit-vector name="status">
                <code-helper name='index-refers-to'>
                    (let* ((info $$._parent._parent._parent)
                           (figure $info._parent._parent)
                           (caste (find-instance $caste_raw $figure.caste $figure.race)))
                      $caste.body_parts[$])
                </code-helper>
            </stl-bit-vector>
        </pointer>
    </struct-type>

    <struct-type type-name='historical_figure' instance-vector='$global.world.history.figures' key-field='id'>
        <enum base-type='int16_t' name='profession' type-name='profession'/>

        <int16_t name='race' ref-target='creature_raw'/>
        <int16_t name='caste' ref-target='caste_raw' aux-value='$$.race'/>

        <int8_t name='sex'/>

        <int32_t name='appeared_year'/>
        <int32_t name='born_year'/>
        <int32_t name='born_seconds'/>
        <int32_t name='old_year'/>
        <int32_t name='old_seconds'/>
        <int32_t name='died_year'/>
        <int32_t name='died_seconds'/>

        <compound type-name='language_name' name='name'/>

        <code-helper name='describe'>
            (describe-obj $.name)
            (awhen (find-creature $.race)
              (fmt "~:(~A ~A~)" $it.caste[$.caste].caste_id $it.creature_id))
        </code-helper>

        <int32_t name='civ_id' ref-target='historical_entity'/>
        <int32_t name='population_id' ref-target='entity_population'/>

        <df-flagarray name='flags'/>

        <int32_t name='unit_id' ref-target='unit'/>
        <int32_t name='id'/>

        <int32_t name='unk4'/>

        <stl-vector name='entity_links'/>
        <stl-vector name='site_links'/>
        <stl-vector name='histfig_links'/>

        <pointer name='info' type-name='historical_figure_info'/>

        <compound name='worldgen'>
            <pointer name="unk_0" type-name="world_site"/>
            <pointer name="unk_4" type-name="language_name"/>
            <pointer name="unk_8" type-name="world_underground_region"/>
            <pointer name="unk_c">
                <pointer name="unk_0" type-name='uint8_t' is-array='true'/>
                <int16_t name="unk_4"/>
                <pointer name="unk_8" type-name='int16_t' is-array='true'/>
                <int16_t name="unk_c"/>
            </pointer>
            <int32_t name="unk_10"/>
        </compound>
    </struct-type>

    <class-type type-name='history_event' original-name='history_eventst'
                instance-vector='$global.world.history.events' key-field='id'>
        <int32_t name='year'/>
        <int32_t name='seconds'/>
        <df-flagarray name='flags'/>
        <int32_t name='id'/>
    </class-type>

    <class-type type-name='history_event_masterpiece_createdst' inherits-from='history_event'>
        <int32_t name='maker' ref-target='historical_figure'/>
        <int32_t name='maker_entity' ref-target='historical_entity'/>
        <int32_t name='site' ref-target='world_site'/>
    </class-type>

    <class-type type-name='history_event_masterpiece_created_itemst'
                inherits-from='history_event_masterpiece_createdst'>
        <enum base-type='int32_t' name='skill_used' type-name='job_skill'/>
        <enum base-type='int16_t' name='item_type' type-name='item_type'/>
        <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>
        <int16_t name='mat_type' ref-target='material' aux-value='$$.mat_index'/>
        <int16_t name='mat_index'/>
        <int32_t name='item_id' ref-target='item'/>
    </class-type>

    <class-type type-name='history_event_masterpiece_created_foodst'
                inherits-from='history_event_masterpiece_createdst'>
        <int32_t name='unk1'/>
        <int16_t name='item_subtype' refers-to='$global.world.raws.itemdefs.food[$]'/>
        <int32_t name='item_id' ref-target='item'/>
    </class-type>

    <struct-type type-name='world_history'>
        dtor 8532fa0

        <stl-vector name='events'>
            <pointer type-name='history_event'/>
        </stl-vector>
        <stl-vector name='events2'>
            <pointer type-name='history_event'/>
        </stl-vector>

        <stl-vector name='figures'>
            <pointer type-name='historical_figure'/>
        </stl-vector>

        <static-array name='other_events' count='9'>
            <stl-vector>
                <pointer type-name='history_event'/>
            </stl-vector>
        </static-array>

        <stl-vector name='ages'>
            <pointer/>
        </stl-vector>

        <stl-vector name='unk1' type-name='int32_t'/>
        <stl-vector name='unk2' type-name='int16_t'/>

        <int32_t/>
        <int32_t/>
        <int32_t/>
        <int32_t/>
        <stl-vector/>
        <stl-vector/>
        <stl-vector/>
        <stl-vector/>
        <stl-vector/>
        <stl-vector/>
        <bool/>
        <stl-vector/>
        <int32_t/>
        <int32_t/>
        <int32_t/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
