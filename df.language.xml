<data-definition>
  <struct-type type-name='language_word' key-field='word'>
    <stl-string name='word'/>

    <compound name='forms' is-union='true'>
      <static-array type-name='stl-string' name='all' count='9'/>
      <compound>
        <stl-string name='noun'/>
        <stl-string name='noun_plural'/>

        <stl-string name='adjective'/>

        <stl-string name='prefix'/>

        <stl-string name='verb'/>
        <stl-string name='verb_3rd_person'/>
        <stl-string name='verb_past'/>
        <stl-string name='verb_passive'/>
        <stl-string name='verb_gerund'/>
      </compound>
    </compound>

    <uint8_t name='adj_dist'/>

    <padding size='7' comment='looks like garbage'/>

    <pointer name='flags'>
      <flag-bit name='front_compound_noun_sing'/>
      <flag-bit name='front_compound_noun_plur'/>
      <flag-bit name='front_compound_adj'/>
      <flag-bit name='front_compound_prefix'/>
      <flag-bit name='rear_compound_noun_sing'/>
      <flag-bit name='rear_compound_noun_plur'/>
      <flag-bit name='rear_compound_adj'/>
      <flag-bit name='the_noun_sing'/>
      <flag-bit name='the_noun_plur'/>
      <flag-bit name='the_compound_noun_sing'/>
      <flag-bit name='the_compound_noun_plur'/>
      <flag-bit name='the_compound_adj'/>
      <flag-bit name='the_compound_prefix'/>
      <flag-bit name='of_noun_sing'/>
      <flag-bit name='of_noun_plur'/>
      <flag-bit name='standard_verb'/>
    </pointer>
    <uint32_t name='flags_size' comment='flagarrayst.slotnum'/>
  </struct-type>

  <struct-type type-name='language_translation' key-field='name'>
    <stl-string name='name'/>

    <stl-vector name='unknown1' comment='empty'/>
    <stl-vector name='unknown2' comment='empty'/>

    <stl-vector name='words' index-refers-to='$global.world.raws.language_words[$]'>
      <pointer type-name='stl-string'/>
    </stl-vector>
  </struct-type>

  <struct-type type-name='language_symbol'>
    <stl-string name='name'/>

    <stl-vector name='unknown' comment='empty'/>

    <stl-vector name='words'>
      <int32_t refers-to='$global.world.raws.language_words[$]'/>
    </stl-vector>
  </struct-type>

  <struct-type type-name='language_name'>
    <stl-string name='first_name'/>
    <stl-string name='nickname'/>

    <static-array name='words' count='7'>
      <int32_t refers-to='$global.world.raws.language_words[$]'/>
    </static-array>
    <static-array name='parts_of_speech' count='7' type-name='int16_t'/>

    <int32_t name='language' refers-to='$global.world.raws.translations[$]'/>
    <int16_t name='unknown'/>

    <bool name='has_name'/>

    <code-helper name='describe'>
      (when $.has_name
        (let ((nick $.nickname)
              (language $global.world.raws.translations[$.language]))
          (fmt "~:(~A~@[ '~A'~]~{ ~A~}~)" $.first_name (if (> (length nick) 0) nick)
               (loop for i from 0 below 7 for word = $.words[i]
                  when (>= word 0) collect $language.words[word].value))))
    </code-helper>
  </struct-type>
</data-definition>
