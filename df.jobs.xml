<data-definition>
  <struct-type type-name='meeting'>
    <int32_t name='unk1' comment='uninitialized'/>
    <pointer name='person1' type-name='creature' comment='diplomat'/>
    <pointer name='person2' type-name='creature' comment='count'/>
    <pointer name='place' type-name='building'/>
    <int16_t name='unk2' comment='1'/>
    <int8_t name='unk3' comment='3'/>
    <int16_t name='unk4' comment='0'/>
    <int32_t name='unk5' comment='-1'/>
  </struct-type>

  <struct-type type-name='meeting_ref'>
    <int32_t name='unk1' comment='4'/>
    <pointer name='ptr' type-name='meeting'/>
    <int32_t name='unk2' comment='0'/>
  </struct-type>

  <global-object name='meetings' offset='0x93f2a74'>
    <stl-vector name='vec'>
      <pointer type-name='meeting'/>
    </stl-vector>
    <stl-vector name='info'>
      <pointer>
        <int32_t name='civ_id' refers-to='$global.world.entities[$]'/>
        <int16_t name='unk1'/>
        <int32_t name='diplomat_id' refers-to='(find-by-id $global.world.history.figures $id $)'/>
        <int32_t name='unk2' comment='-1'/>
        <padding size='32' comment='0'/>
        <pointer>
          <int32_t name='unk1' comment='uninit'/>
          <stl-string name='script_file' comment='data/dipscript/dwarf_liaison'/>
          <stl-vector name='script_steps' type-name='pointer'/>
          <stl-vector name='unknown' comment='null'/>
          <stl-string name='code' comment='DWARF_LIAISON'/>
        </pointer>
        <padding size='16' comment='0'/>
        <stl-string name='unk3'/>
        <stl-string name='unk4'/>
        <padding size='112' comment='0'/>
      </pointer>
    </stl-vector>
  </global-object>

  <struct-type type-name='job_list_link' key-field='job'>
    <pointer name='job' type-name='job'/>
    <pointer name='prev' type-name='job_list_link'/>
    <pointer name='next' type-name='job_list_link'/>
  </struct-type>

  <struct-type type-name='job' key-field='id'>
    <int32_t name='id'/>
    <pointer name='list_link' type-name='job_list_link'/>
    <int16_t name='job_id'/>
    <int32_t name='unk2'/>

    <int16_t name='x'/>
    <int16_t name='y'/>
    <int16_t name='z'/>

    <int32_t name='unk3'/>
    <pointer name='unk4' comment='garbage'/>

    <compound size='4' name='flags'>
      <flag-bit name='repeat'/>
      <flag-bit name='suspend'/>
    </compound>

    <int16_t name='matType'/>
    <int32_t name='matIndex'/>
    <int16_t name='unk5'/>
    <int16_t name='unk6'/>
    <int16_t name='item_subtype'/>
    <int32_t name='unk7'/>
    <int32_t name='unk8'/>

    <static-array name='job_material_category' type-name='flag-bit' count='32'/>
    // bitmask - plant, wood, cloth, silk, leather, bone, shell, wood (duplicate?), soap, ivory/tooth, horn, pearl, yarn

    <stl-string name='reaction_name'/>

    <int32_t name='unk9'/>
    <int32_t name='unk10'/>

    <stl-vector name='items'>
      <pointer>
        <pointer name='item' type-name='item'/>
        <int32_t name='unk1'/>
        <int32_t name='unk2'/>
        <int32_t name='unk3'/>
      </pointer>
    </stl-vector>

    <stl-vector name='unk11' type-name='pointer'/>

    <stl-vector name='references'>
      <pointer type-name='general_ref'/>
    </stl-vector>

    <stl-vector name='job_items'>
      <pointer type-name='job_item'/>
    </stl-vector>
  </struct-type>

  <struct-type type-name='job_item'>
    <int16_t name='itemType'/>
    <int16_t name='itemSubtype'/>
    <int16_t name='matType'/>
    <int32_t name='matIndex'/>

    <static-array name='flags1' type-name='flag-bit' count='32'/>

    <int32_t name='count'/>
    <int16_t name='unk1'/>

    <static-array name='flags2' type-name='flag-bit' count='32'/>
    <int32_t name='unk2'/>
    <static-array name='flags3' type-name='flag-bit' count='32'/>
    <int32_t name='unk3'/>

    <int32_t name='metal_ore'/>

    <stl-string name='reaction_class'/>
    <stl-string name='has_material_reaction_product'/>

    <int32_t name='unk4'/>
    <int32_t name='reagent_index'/>

    <stl-vector type-name='int32_t' name='contains' comment='used with custom reactions'/>

    <int32_t name='unk5'/>
    <int16_t name='has_tool_use'/>
  </struct-type>

  <struct-type type-name='activity_entry' key-field='id'>
    <int32_t name='id'/>
    <int16_t name='is_individual'/>
    <stl-vector name='events'>
      <pointer type-name='activity_event'/>
    </stl-vector>
    <int32_t name='unk2'/>
  </struct-type>

  <class-type type-name='activity_event' mangled-name='activity_eventst'>
    <int32_t name='event_id'
             comment='mostly, but not always, the index in activity.events'/>
    <int32_t name='activity_id' refers-to='(find-by-id $global.world.activities[0] $id $)'/>

    -- Guess:
    <int32_t name='subevent_id' comment='-1 unless subevent'/>
    <int32_t name='num_subevents' comment='0 for ind.drill, 2 for all in training session'/>

    <stl-vector name='hist_figure_ids'>
      <int32_t refers-to='(find-by-id $global.world.history.figures $id $)'/>
    </stl-vector>
    <stl-vector name='participant_ids'>
      <int32_t refers-to='(find-by-id $global.world.creatures $id $)'/>
    </stl-vector>

    -- Either empty, or same as above:
    <stl-vector name='hist_figure_ids2'>
      <int32_t refers-to='(find-by-id $global.world.history.figures $id $)'/>
    </stl-vector>
    <stl-vector name='participant_ids2'>
      <int32_t refers-to='(find-by-id $global.world.creatures $id $)'/>
    </stl-vector>

    -- These are equal to the ones above:
    <int32_t name='activity_id2' refers-to='(find-by-id $global.world.activities[0] $id $)'/>
    <int32_t name='event_id2'/>
  </class-type>

  <class-type type-name='activity_event_individual_skill_drill' inherits-from='activity_event'
              mangled-name='activity_event_individual_skill_drillst'>
    <int32_t name='building_id' refers-to='(find-by-id $global.world.buildings $id $)'/>
    <int32_t name='unk5'/>
  </class-type>

  <class-type type-name='activity_event_training_session' inherits-from='activity_event'
              mangled-name='activity_event_training_sessionst'>
  </class-type>

  <class-type type-name='activity_event_combat_training' inherits-from='activity_event'
              mangled-name='activity_event_combat_trainingst'>
    <int32_t name='building_id' refers-to='(find-by-id $global.world.buildings $id $)'/>
    <int32_t name='hist_figure_id' refers-to='(find-by-id $global.world.history.figures $id $)'/>
    <int32_t name='unit_id' refers-to='(find-by-id $global.world.creatures $id $)'/>
    <int32_t name='unk5'/>
  </class-type>

  <class-type type-name='activity_event_skill_demonstration' inherits-from='activity_event'
              mangled-name='activity_event_skill_demonstrationst'>
    <int32_t name='building_id' refers-to='(find-by-id $global.world.buildings $id $)'/>
    <int32_t name='hist_figure_id' refers-to='(find-by-id $global.world.history.figures $id $)'/>
    <int32_t name='unit_id' refers-to='(find-by-id $global.world.creatures $id $)'/>
    <int16_t name='unk5'/>
    <int32_t name='unk6'/>
    <int32_t name='unk7'/>
    <int32_t name='unk8'/>
    <int32_t name='unk9'/>
  </class-type>
</data-definition>
